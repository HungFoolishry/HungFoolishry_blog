<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[一个时间跳变导致的多线程卡死在time.sleep中的问题]]></title>
      <url>/2017/11/20/%E4%B8%80%E4%B8%AA%E6%97%B6%E9%97%B4%E8%B7%B3%E5%8F%98%E5%AF%BC%E8%87%B4%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%8D%A1%E6%AD%BB%E5%9C%A8time-sleep%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>最近在公司遇到一个多线程卡死的问题：在对多个主机进行多线程操作的时候，主机的时钟进行ntp同步后进行了往后跳变，导致在线程进入time.sleep的时候卡死的问题。<br><a id="more"></a></p>
<p>主要问题在于，在用多线程进行time.sleep切换的时候，社区的oslo service 采用了wall clock，导致线程进行time sleep切换后，无法等待至end time。比如 end_time = start_time + sleep_time，比如说start_time =7:00，在进入sleep time（10s） 后，start_time由于主机的时钟同步，导致start_time时光回溯，start_time=6:00。此刻，多线程一直卡死在time.sleep(10)的状态下，一直等一个小时10秒后，才能进行sleep后的操作。</p>
<p>解决办法:<br>1,采用libc中time sleep，该sleep是monotonic clock，不会产生时光回溯的问题。但是该时钟在实际使用中无法实现time.sleep的多线程切换的功能。所以我进行了小小的改动，虽然不完善，后续会研究更加完美的方法。<br>2，暂时办法：用libc.time.sleep（1）然后紧跟time.sleep(0.0005)<br>第一个sleep可以进行正常的延迟，第二个超短时间的延迟用于线程的切换。</p>
<p>阅读的文档：</p>
<p><a href="http://i2cbus.blog.51cto.com/9231371/1534933" title="http://i2cbus.blog.51cto.com/9231371/1534933" target="_blank" rel="external">Python 官方代码threading模块的一个死锁的bug</a> </p>
<p><a href="https://stackoverflow.com/questions/1205722/how-do-i-get-monotonic-time-durations-in-python" target="_blank" rel="external">how-do-i-get-monotonic-time-durations-in-python</a></p>
<ul>
<li>OpenStack社区上的相关bug<br>Relate issue: <a href="https://bugs.launchpad.net/mos/+bug/1642103" target="_blank" rel="external">https://bugs.launchpad.net/mos/+bug/1642103</a> services hang when time is jumping forward and backward<br>Related patch that fixes the issue for oslo:<br><a href="https://review.openstack.org/#/c/190372/" target="_blank" rel="external">https://review.openstack.org/#/c/190372/</a><br>Same topic:<br><a href="https://review.openstack.org/#/c/286838/" target="_blank" rel="external">https://review.openstack.org/#/c/286838/</a><br><a href="https://review.openstack.org/#/c/434327" target="_blank" rel="external">https://review.openstack.org/#/c/434327</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Thread </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[moon]]></title>
      <url>/2017/11/05/moon/</url>
      <content type="html"><![CDATA[<h2 id="I-really-want-to-go-there"><a href="#I-really-want-to-go-there" class="headerlink" title="I really want to go there"></a>I really want to go there</h2><a id="more"></a>
<p><a href="https://www.google.cn/maps/place/6709+Hyacinth+Ln,+Dallas,+TX+75252%E7%BE%8E%E5%9B%BD/@32.9911811,-96.7893613,237m/data=!3m2!1e3!4b1!4m31!1m25!4m24!1m6!1m2!1s0x864c6a83f5067cf9:0xe4beea700f7c219b!2zUHJlc3RvbiBSZCwgVGV4YXMsIOe-juWbvQ!2m2!1d-96.8019329!2d33.2184473!1m11!1m2!1s0x864c21da13c59513:0x62aa036489cd602b!2z5pmu6I6x6K-6IOe-juWbveW-t-WFi-iQqOaWr-W3ng!2m2!1d-96.6988856!2d33.0198431!3m4!1m2!1d-96.7892025!2d32.9909211!3s0x864c222c6e0d6fbd:0xf4159b8f3eafa30!1m3!2m2!1d-96.788708!2d32.991176!3e0!3m4!1s0x864c222c6f4ad8df:0xcfd3c8ae43623338!8m2!3d32.99118!4d-96.7888141" target="_blank" rel="external">https://www.google.cn/maps/place/6709+Hyacinth+Ln,+Dallas,+TX+75252%E7%BE%8E%E5%9B%BD/@32.9911811,-96.7893613,237m/data=!3m2!1e3!4b1!4m31!1m25!4m24!1m6!1m2!1s0x864c6a83f5067cf9:0xe4beea700f7c219b!2zUHJlc3RvbiBSZCwgVGV4YXMsIOe-juWbvQ!2m2!1d-96.8019329!2d33.2184473!1m11!1m2!1s0x864c21da13c59513:0x62aa036489cd602b!2z5pmu6I6x6K-6IOe-juWbveW-t-WFi-iQqOaWr-W3ng!2m2!1d-96.6988856!2d33.0198431!3m4!1m2!1d-96.7892025!2d32.9909211!3s0x864c222c6e0d6fbd:0xf4159b8f3eafa30!1m3!2m2!1d-96.788708!2d32.991176!3e0!3m4!1s0x864c222c6f4ad8df:0xcfd3c8ae43623338!8m2!3d32.99118!4d-96.7888141</a></p>
<p>but I can’t be able to. TT</p>
]]></content>
      
        <categories>
            
            <category> YJ&amp;XC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Moon </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/11/05/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[MYSQL 中的join 语句]]></title>
      <url>/2017/11/05/MYSQL-%E4%B8%AD%E7%9A%84join-%E8%AF%AD%E5%8F%A5/</url>
      <content type="html"><![CDATA[<h2 id="left-join"><a href="#left-join" class="headerlink" title="left join"></a>left join</h2><p> left join 可以将两个表进行合并，左表的数据完全保留，右表的数据在on条件符合的情况下进行筛选后保留。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select P.FirstName, P.LastName, A.City, A.State from Person as P LEFT JOIN Address as A on P.PersonId = A.PersonID</div></pre></td></tr></table></figure></p>
<p>说明：<br>  select 左右表数据 from 左表 as 简名 LEFT JOIN 右表 as 简名 on 过滤条件<br>  同理，right join 可以将右表所有数据显示，将左表过滤显示。</p>
<p>如下文章用集合来表示，join的数据结构。<br><a href="http://www.cnblogs.com/sunjie9606/p/4167190.html" target="_blank" rel="external">http://www.cnblogs.com/sunjie9606/p/4167190.html</a></p>
<a id="more"></a>
<p>inner join 表示交集，<br>full join 表示合集<br>left join 表示左全集附加右过滤条件<br>right join 表示右<br>outer join 包括full left right join<br>cross join表示笛卡尔积，表示所有可能性的组合情况</p>
]]></content>
      
        <categories>
            
            <category> DB </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MYSQL </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
